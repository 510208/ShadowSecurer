<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhRRwBXUUYAV1FGAFdRRgBWUEQCV1FGKVdRRm1YUkesWFJH2VhS
        R/JYUkf8WFJH/FhSR/FYUkfZWFJHrldRRm5XUUYqVlBFAldRRgBXUUYAV1FGAFdRRgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXUUYAWFJHAFdRRgBXUEUCV1FGN1hSR5ZYUkfeWFJH+1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/FhSR99YUkeYV1FGN1ZQRQJXUUYAWFJHAFdR
        RgAAAAAAAAAAAAAAAAAAAAAAYVtRAF5ZTwBeWVAAYVxSAFlUSQBYUkcAV1FGGVhSR4lYUkfqWFJH/1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkfqWFJHildR
        RhpXUUYAUUxAAEA7LgBCPTEAQTwxAEI8MQBiXVMAYl1TAGFcUgBgW1EAX1pPAFdRRjRYUkfBWFJH/1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hS
        R/9YUkf/WFJHwlhSRzZJQjcARkA0AEM+MgBCPTEAQTsvAGJdUwBiXVMKX1pQV1xXTYlbVkuRWVRJ2lhT
        SP9YUkf/V1JH/1dRRv9WUEX/VVBF/1VPRP9UTkP/VE5C/1NNQv9STEH/UkxA/1FLQP9QSj//UEo+/09J
        Pv9PSD3/Tkg8/01HPP9NRzv/SkQ420I8MJFAOi2NPzotg0E7L0BDPDADYl1UAmFcU4BrZl36gX12/4OA
        ef+Cf3j/gn53/4F+dv+AfXb/f3t1/357c/99enP/fXly/3x4cf97d2//enZv/3l1bv94dG3/d3Rs/3dz
        a/92cmr/dXFp/3RwaP9zb2f/cm5m/3FtZf9wbGT/b2tj/29qYv9lYVf/SEI26kE7L15jXVMhZF9V2qSh
        nf/V1dX/1dXV/9TU1P/U1NP/1NTU/9PT0//T09L/09PS/9LS0v/S0tH/0tLR/9LS0f/R0dH/0dHQ/9HR
        0P/R0ND/0NDP/8/Pz//Qz8//z8/P/87Ozv/Pzs7/z87O/87Ozv/Nzc3/zs7N/8nJyP92cmr/QDktyGNe
        VC5nYlnmuLe0/9nZ2f/X19f/19fX/9bW1v/W1tb/1tbW/9XV1f/V1dX/1dXV/9XV1f/U1NT/1NTU/9TU
        1P/U1NT/09PT/9PT0//T09P/0tLS/9LS0v/S0tL/0dHR/9HR0f/S0tL/0dHR/9HR0f/Q0ND/09PT/4yK
        hP9AOy7bZWBSLmplWebCwLz/5eXm/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Hh4f/h4eH/4eHh/+Hh4f/h4eH/4ODg/+Dg4P/f39//3t7e/7u6uP9+enP/n52Z/8/P
        z//S0tL/jImE/0E7L9s0MY4xNTKV6K2tz//u7uz/6urq/+rq6//q6+z/6uvs/+rr7P/p6uv/6enq/+np
        6f/p6en/6enp/+np6f/p6en/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+fn5//p6en/kI2H/0E7
        Lv9gW1L/xsbF/9PT0/+MiYT/QTsv2yMhoD0ICMHuLy/U/8DA5f/t7er/6+jh/+zm0v/u4cj/79jG/+3e
        0//q5uP/6erq/+np6v/p6en/6enp/+np6f/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/5+fn/+jo
        6P+8u7j/cGxj/5ORi//Ozs7/0tLS/42KhP9CPC/bX1lMa0pHdvsPD8P/Li7U/8S5u//23ZD/9dmC//fN
        e//+rG3//a1y//m5iv/x0Lj/6uXi/+nq6v/p6en/6enp/+np6f/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/n5+f/5+fn/+fn5//h4eD/3t7e/9HR0f/S0tL/jYuF/0M8MNtaVUqsaGNX/4iAnf8fHMX/MCm7/8q0
        lP/867P//OzN///cwv//w5f//6pr//6pa//3vZL/7N/W/+nq6//q6uv/6urq/+rq6v/p6en/6enq/+np
        6v/p6er/6enq/+np6f/o6en/6Onp/+np6f/l5eX/1NTU/9DQ0P+AfHX/Qz0x01dRR9mQgl//7NB7/7ag
        kv8dGcH/MC/Q/87J2//+57j//ti6//7v4///07T//6ps//+oaP/1s4L/saKV/5WTjv+Wk43/lZKM/5SR
        i/+UkYv/k5CK/5OPif+Sj4j/kY6I/5GNh/+PjIb/j4yF/42Kg/+Fgnv/e3dv/1BLQP9MRjrZfnJU8eHG
        dv/42X7/+Np9/7eru/8eH9T/Lyu+/8ulhf//rGf//ryM//7v5P//vo7//6ho//+oaf/LkGH/hn1y/4OA
        eP+Cf3f/gn52/4F9df+AfHT/f3tz/397cv9+enL/fXlx/3x4cP98d2//e3Zu/3p2bv9bVkz/SEI2/1RP
        Q/HNtW/899l+//bYfv/22YP//vbb/7isvP8dGcH/MCS6/9CLe///q2j//t/H///Ssv//qGj//6lq//+q
        a//11bz/8PHy//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/x8fD/5OTj/25q
        Yf9NRzv/WFJH/M+3cPz32X7/9th+//bZg//89N3/++eq/7WekP8dGsP/MSC5/9CLfP//4cf//9Oz//+o
        aP//qWr//6lr//jXvv/z9fb/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//b2
        9v+7ubX/Tkk+/1ROQ/9YUkf8gHRU8eLHd//42X//9th9//rswf/889f/+N2G/7Wajv8eFL7/MCTA/9DC
        3f//wY///6ho//+oaP/7v5P/9e/r//T09P/z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz
        8//z8/P/7e3t/355cv9MRjv/WFJH/1hSR/FWUEbYjX5Z/+nNef/42X7/99yM//zz2v/89Nz//eW1/7qk
        x/8eINX/MSjH/9CNf///qmf//LmH//Xo3v/09fX/9PT0//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz
        8//z8/P/8/Pz//X19f/Jx8T/VVBF/1NNQv9YUkf/WFJH2VdRRqxYUkf/iXtY/9zCdf/32X3/+NyK//np
        t//87dD//9/D/7uNoP8eEr3/MB+3/86cnP/4697/9PX1//T09P/09PT/9PT0//Pz8//z8/P/8/Pz//Pz
        8//z8/P/8/Pz//Pz8//z8/P/8fHx/42Jgv9NRzv/V1FG/1hSR/9YUkesV1FGbFhSR/tWUUb/bmRO/62b
        Zv/exHf/89eA//jOe//+rG3//69y/7mNo/8dHND/Ly/T/8jI7f/29vT/9PT0//T09P/09PT/8/Pz//Pz
        8//z8/P/8/Pz//Pz8//z8/P/8/Pz//X19f/V1NL/XVhO/1NNQf9YUkf/WFJH+1dRRmxXUUYpWFJH31hS
        R/9WUUb/WlVK/3RsXP/Kwar/9+nP//feyv/25dn/9/Ls/7S06f8cHdH/OTnW/+Pj8f/19fT/9PT0//T0
        9P/09PT/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/9PT0/52alP9PST7/V1FG/1hSR/9YUkffV1FGKVZQ
        RQJYUkeXWFJH/1hSR/9YUkf/X1lQ/5KPiv/w8PH/9Pb3//T19v/09PX/9vb0/7e36v+FheL/6eny//X1
        9P/09PT/9PT0//T09P/z8/P/8/Pz//Pz8//z8/P/8/Pz//T09P/f3t3/aGNZ/1JMQf9YUkf/WFJH/1hS
        R5dWUEQCWFFHAFdRRjdYUkfqWFJH/1hSR/9cVkv/bmlg/9HQzv/29vb/9PT0//T09P/09PT/9vb0//b2
        9P/09PT/9PT0//T09P/09PT/9PT0//T09P/z8/P/8/Pz//Pz8//z8/P/9fX1/6yqpf9RTEH/VlFF/1hS
        R/9YUkfqV1FGN1dRRgBXUUYAVlBFAVhSR4lYUkf/WFJH/1lTSP9hW1H/n5yW//Pz8//09PT/9PT0//T0
        9P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//Pz8//z8/P/8/Pz//T09P/n5+b/dG9n/1JM
        Qf9YUkf/WFJH/1hSR4lWUEYBV1FGAFdRRgBXUUYAV1FGGVhSR8JYUkf/WFJH/1xXTP9ybWX/zMvI//Ly
        8v/z8/L/8/Ly//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Hx8f/y8vH/7u7u/6yp
        pP9VUEX/VlBF/1hSR/9YUkfCV1FGGVdRRgBXUUYAV1FHAFhSRwBXUUcAV1FGNVhSR9lYUkf/WVNI/2Bb
        Uf9zb2b/kI2G/5SRi/+UkIr/k5CJ/5KPiP+Rjof/kI2G/5CMhf+PjIT/jouE/42Kg/+NiYL/i4iB/4uH
        gf9/e3P/XFZM/1VPRP9YUkf/WFJH2VdRRjVYUUYAWFJHAFdRRgAAAAAAV1FFAFdRRgBYUkcAV1FGQVhS
        R9lYUkf/WVNI/1xWTP9dV03/XFdM/1xWTP9bVkv/WlVK/1pUSf9ZVEn/WFNI/1hSR/9XUUf/VlFG/1ZQ
        Rf9VT0T/VE9E/1ROQ/9WUEX/WFJH/1hSR9pXUUZBWFJHAFdRRQBXUUYAAAAAAAAAAAAAAAAAV1FGAFdR
        RgBYUkcAV1FGNVhSR8JYUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkfCV1FGNVhSRwBXUUYAV1FGAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV1FGAFdRRQBYUUYAV1FGGVhSR4lYUkfqWFJH/1hSR/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/9YUkfqWFJHiVdRRhlYUkcAV1FGAFdRRgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAV1FGAFhSRwBXUUYAVlBFAVdRRjZYUkeXWFJH31hSR/tYUkf/WFJH/1hS
        R/9YUkf/WFJH/1hSR/9YUkf/WFJH/1hSR/tYUkfeWFJHlldRRjdWUEUCV1FGAFhSRwBXUUYAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV1JGAFdRRgBXUUYAV1FGAFZQRQJXUUYqWFJGbFhS
        R6xYUkfYWFJH8lhSR/1YUkf8WFJH8VhSR9hYUkerV1FGbFdRRipWUEUCV1FGAFdRRgBXUUYAVlJGAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH/AAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAAcAAAAPgAAAH8AAAD/gAAB8=
</value>
  </data>
</root>